// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.61
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace CustomLogic
{

    // AomObject
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.27.0.0")]
    public partial class AomObjectMap : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AomObject>
    {
        public AomObjectMap()
            : this("dbo")
        {
        }

        public AomObjectMap(string schema)
        {
            ToTable("AomObject", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("uniqueidentifier").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.AomMetaId).HasColumnName(@"AomMetaId").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(250);

            // Foreign keys
            HasRequired(a => a.AomMeta).WithMany(b => b.AomObjects).HasForeignKey(c => c.AomMetaId); // FK_dbo.AomObject_dbo.AomMeta_AomMetaId
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
